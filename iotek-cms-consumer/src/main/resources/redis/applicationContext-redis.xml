<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
		default-lazy-init="true">

	<!-- 引入reids -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:/redis.properties" />

	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:hostName="${redis1.ip}" p:port="${redis1.port}" p:password="${redis1.pass}"  p:poolConfig-ref="poolConfig"/>
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean>   
    
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.pool.maxIdle}" />  
        <property name="maxTotal" value="${redis.pool.maxActive}" />  
        <!-- property name="maxWait" value="${redis.pool.maxWait}" /-->  
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />  
    </bean>   
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="poolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                 <property name="password"   value="${redis1.pass}" /> 
             
                <constructor-arg index="0" value="${redis1.ip}" />
                    <constructor-arg index="1" value="${redis1.port}" type="int"/>
                  <constructor-arg index="2" value="${redis1.timeout}" type="int"/>
                   <constructor-arg index="3" value="${redis1.weight}" type="int"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
</beans>